{"version":3,"sources":["services/pixabayService.js","components/SearchForm/SearchForm.jsx","components/SearchForm/index.js","components/Searchbar/index.js","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGalleryItem/index.js","components/ImageGallery/index.js","components/ImageGallery/ImageGallery.jsx","components/Modal/index.js","components/Modal/Modal.jsx","components/shared/Container/Container.styles.js","components/shared/Container/index.js","components/shared/Container/Container.jsx","components/shared/Button/Button.styles.js","components/shared/Button/Button.jsx","components/shared/Button/index.js","App.jsx","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","PixabayService","_page","_query","_perPage","_lastPage","total","this","Math","ceil","url","process","encodeURIComponent","get","then","data","hits","setLastPage","map","id","tags","largeImageURL","webformatURL","val","SearchForm","state","search","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onSubmit","className","type","autoComplete","autoFocus","placeholder","onChange","Component","defaultProps","Searchbar","ImageGalleryItem","onImageClick","currentImg","alt","imgSrc","src","onClick","ImageGallery","images","idx","rest","Modal","handleKeyDown","code","onClose","window","addEventListener","removeEventListener","children","StyledContainer","styled","div","Container","Btn","button","Button","caption","handleClick","App","api","Api","isModalOpen","isLoading","isNotLastPage","err","getImages","checkForLastPage","prevState","catch","console","dir","errMsg","message","finally","onSearchSubmit","query","resetPages","toggleModal","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","page","lastPage","loader","color","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bc3b7c4d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//encodeURIComponent(str) - отформатирует строку для поискового запроса, напр \"yellow flowers\" => 'yellow+flowers'\r\n//str = `https://pixabay.com/api/?key=18874263-8f02838ab97d9dd90f7110125&q=yellow+flowers&image_type=photo`;  //for test\r\n\r\nconst API_KEY = process.env.REACT_APP_PIXABAY_API_KEY;\r\n\r\naxios.defaults.baseURL = `https://pixabay.com/api`;\r\n\r\nexport default class PixabayService {\r\n\r\n    _page = 1;\r\n    _query = '';\r\n    _perPage = 12;\r\n    _lastPage = null;\r\n\r\n    setLastPage(total){\r\n        this._lastPage = Math.ceil(total / this._perPage)\r\n    }\r\n\r\n    getImages(){\r\n        const url = `?key=${API_KEY}&q=${encodeURIComponent(this._query)}&page=${this._page}&per_page=${this._perPage}&image_type=photo&orientation=horizontal`;\r\n        return axios.get(url)\r\n            .then( ({data}) => {\r\n                const {total, hits} = data;\r\n                this.setLastPage(total);\r\n                this._page++;\r\n                const images = hits.map( ({id, tags, largeImageURL, webformatURL}) => {\r\n                    id = id + '';\r\n                    return {id, tags, largeImageURL, webformatURL}\r\n                    })\r\n                return images\r\n            })\r\n            \r\n    }\r\n\r\n    set query(val) {\r\n        this._query = val; \r\n    }\r\n\r\n    set perPage(val) {\r\n        this._perPage = val;\r\n    }\r\n\r\n    set page(val){\r\n        this._page = val;\r\n    }\r\n    get page() {\r\n        return this._page;\r\n    }\r\n    get lastPage(){\r\n        return this._lastPage;\r\n    }\r\n\r\n    resetPages(){\r\n        this._page = 1;\r\n    }\r\n}","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchForm.styles.scss';\n\nclass SearchForm extends Component{\n  state = {\n    search: ''\n  }\n\n  handleChange = ({target}) => {\n    this.setState({search: target.value})\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.search);\n  }\n  render(){\n    const {search} = this.state; \n    return (\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n      \n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus={true}\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n            value={search}\n          />\n        </form>\n    );\n  }\n} \n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nSearchForm.defaultProps = {\n  // bla: 'test',\n};\n\nexport default SearchForm;\n","import SearchForm from './SearchForm';\n\nexport default SearchForm;\n","import Searchbar from './Searchbar';\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SearchForm from '../SearchForm';\nimport './Searchbar.styles.scss';\n\nconst Searchbar = ({onSubmit}) => (\n  <header className=\"Searchbar\">\n    <SearchForm onSubmit={onSubmit}/>\n  </header>\n);\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ImageGalleryItem.styles.scss';\n\nconst ImageGalleryItem = ({tags, largeImageURL, webformatURL, onImageClick}) => {\n\n  const currentImg = {\n    alt: tags,\n    imgSrc: largeImageURL\n  }\n\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" onClick={()=> onImageClick(currentImg)}/>\n    </li>\n  )\n};\n\nImageGalleryItem.propTypes = {\n  tags: PropTypes.string,\n  webformatURL: PropTypes.string,\n  largeImageURL: PropTypes.string,\n  onImageClick: PropTypes.func.isRequired,\n};\n\nImageGalleryItem.defaultProps = {\n  webformatURL: process.env.PUBLIC_URL+'/img/notFound.png',\n  largeImageURL: process.env.PUBLIC_URL+'/img/notFound.png',\n  tags: \"Sorry, Image not found\"\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from './ImageGalleryItem';\n\nexport default ImageGalleryItem;\n","import ImageGallery from './ImageGallery';\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ImageGalleryItem from './ImageGalleryItem';\nimport './ImageGallery.styles.scss';\n\nconst ImageGallery = ({images, onImageClick}) => (\n  <ul className=\"ImageGallery\">\n    {\n      images.map( ({id, ...rest}, idx) => \n        <ImageGalleryItem key={id + idx} {...rest} onImageClick={onImageClick}/>)\n    }\n  </ul>\n);\n\nImageGallery.propTypes = {\n   images: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string, \n    tags: PropTypes.string, \n    largeImageURL: PropTypes.string, \n    webformatURL: PropTypes.string\n   })).isRequired,\n   onImageClick: PropTypes.func.isRequired\n};\n\nexport default ImageGallery;\n","import Modal from './Modal';\n\nexport default Modal;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.styles.scss';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount(){\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  }\n  \n  \n  render(){\n    const {children, onClose} = this.props;\n\n    return (\n      <div className=\"Overlay\" onClick={onClose}>\n        <div className=\"Modal\">\n          {children}\n        </div>\n      </div>\n    )\n  }\n}\n","import styled from 'styled-components';\r\n\r\nexport const StyledContainer = styled.div`\r\n    width: 290px;\r\n    padding: 15px 15px;\r\n    margin: 0 auto;\r\n\r\n    @media sreen and (min-width: 450px){\r\n        width: 450px;\r\n    }\r\n\r\n    @media sreen and (min-width: 768px){\r\n        width: 768px;\r\n    }\r\n\r\n    @media sreen and (min-width: 1200px){\r\n        width: 1200px;\r\n    }\r\n`;\r\n","import Container from './Container';\r\n\r\nexport default Container;\r\n","import React from 'react';\r\n\r\nimport { StyledContainer } from './Container.styles';\r\n\r\nconst Container = ({children}) => (\r\n  <StyledContainer>\r\n    {children}\r\n  </StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\nexport const Btn = styled.button`\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    background-color: #3f51b5;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    text-align: center;\r\n    display: inline-block;\r\n    color: #fff;\r\n    border: 0;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    min-width: 180px;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    &:hover, &:focus {\r\n        background-color: #303f9f;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Btn } from './Button.styles';\r\n\r\nconst Button = (props) => {\r\n  const { caption, handleClick } = props\r\n  return (\r\n  <Btn type=\"button\"  onClick={handleClick}> \r\n    {caption}\r\n  </Btn>\r\n)};\r\n\r\nButton.propTypes = {\r\n  caption: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n};\r\n\r\nButton.defaultProps = {\r\n  caption: '',\r\n  handleClick: () => {}\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, {Component} from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport Api from './services/pixabayService';\r\n\r\nimport SearchBar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Modal from './components/Modal';\r\nimport Container from './components/shared/Container';\r\nimport Button from './components/shared/Button';\r\n\r\nimport './App.scss';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nclass App extends Component {\r\n\r\n  api = new Api(); \r\n\r\n  state = {\r\n    images: [],\r\n    isModalOpen: false,\r\n    isLoading: false,\r\n    isNotLastPage: true,\r\n    currentImg: {},\r\n    err: {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getImages();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if (prevState.images !== this.state.images) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n  getImages = () => {\r\n    this.checkForLastPage();\r\n    this.setState({isLoading: true})\r\n    this.api.getImages()\r\n      .then(images => {\r\n        this.setState( prevState => {\r\n          return {\r\n            images: [...prevState.images, ...images]\r\n          }\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.dir(err);\r\n        this.setState({errMsg: err.message})\r\n      })\r\n      .finally(()=> this.setState({isLoading: false}));\r\n  }\r\n\r\n  checkForLastPage(){\r\n    if (this.api.page === this.api.lastPage) {\r\n      this.setState ({\r\n        isNotLastPage: false\r\n      })\r\n    }      \r\n  }\r\n\r\n  onSearchSubmit = (query) => {\r\n    this.setState({images: []})\r\n    this.api.query = query;\r\n    this.api.resetPages();\r\n    this.getImages();\r\n  }\r\n\r\n  onImageClick = (currentImg) => {\r\n    this.setState({currentImg});\r\n    this.toggleModal();\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(state => ({isModalOpen: !state.isModalOpen})\r\n    )\r\n  }\r\n\r\n  render(){\r\n    const {images, currentImg, isModalOpen, isLoading, isNotLastPage, errMsg} = this.state;\r\n\r\n    const loader =  isLoading ? \r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n      /> : \r\n      (isNotLastPage && <Button caption=\"Load More...\" handleClick={this.getImages}/>)\r\n    \r\n\r\n    return (\r\n      <>\r\n        <SearchBar onSubmit={this.onSearchSubmit} />\r\n        <ImageGallery \r\n          onImageClick={this.onImageClick} \r\n          images={images}\r\n          />\r\n        \r\n        <Container>   \r\n        {!!errMsg && <span>{errMsg}</span> }\r\n          {loader}\r\n        </Container>\r\n\r\n        {isModalOpen && \r\n          <Modal onClose={this.toggleModal}>\r\n            <img src={currentImg.imgSrc} alt={currentImg.alt} />\r\n          </Modal>}\r\n        \r\n      </>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}